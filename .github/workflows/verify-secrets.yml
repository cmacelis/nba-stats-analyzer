name: Verify Secrets

on: workflow_dispatch

jobs:
  verify-secrets:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Check Firebase Configuration
        id: firebase-check
        run: |
          # Create an array of required secrets
          REQUIRED_SECRETS=(
            "FIREBASE_API_KEY:${{ secrets.FIREBASE_API_KEY }}"
            "FIREBASE_AUTH_DOMAIN:${{ secrets.FIREBASE_AUTH_DOMAIN }}"
            "FIREBASE_PROJECT_ID:${{ secrets.FIREBASE_PROJECT_ID }}"
            "FIREBASE_STORAGE_BUCKET:${{ secrets.FIREBASE_STORAGE_BUCKET }}"
            "FIREBASE_MESSAGING_SENDER_ID:${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}"
            "FIREBASE_APP_ID:${{ secrets.FIREBASE_APP_ID }}"
            "FIREBASE_MEASUREMENT_ID:${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          )

          # Check each secret
          for secret in "${REQUIRED_SECRETS[@]}"; do
            KEY="${secret%%:*}"
            VALUE="${secret#*:}"
            
            if [ -z "$VALUE" ]; then
              echo "❌ $KEY is not set"
              exit 1
            else
              echo "✅ $KEY is set"
            fi
          done

      - name: Verify Firebase Service Account
        if: success()
        run: |
          if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" ]; then
            echo "❌ FIREBASE_SERVICE_ACCOUNT is not set"
            exit 1
          else
            echo "✅ FIREBASE_SERVICE_ACCOUNT is set"
            if echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | jq empty 2>/dev/null; then
              echo "✅ Service account is valid JSON"
            else
              echo "❌ Invalid JSON format"
              exit 1
            fi
          fi 